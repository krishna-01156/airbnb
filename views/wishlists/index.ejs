<% layout("/layouts/boilerplate") -%>

    <div class="container mt-5 mb-5">
        <h2 class="fw-bold fs-1 mb-4">Your Wishlists</h2>

        <% if (wishlists.length===0) { %>
            <p>You have no wishlists yet.</p>
            <% } else { %>
                <% wishlists.forEach(wishlist=> { %>
                    <div class="mb-5">
                        <div
                            class="settings-panel d-none position-absolute top-0 start-0 w-100 h-100 rounded shadow-sm">
                            <!-- Close (X) Button -->
                            <button type="button"
                                class="close-panel btn btn-sm position-absolute top-0 start-0 m-2 fs-5">&times;</button>

                            <!-- Settings Heading -->
                            <div class="text-center mt-4 mb-3">
                                <strong class="text-secondary" style="font-size: 1rem;">Settings</strong>
                            </div>

                            <!-- Options -->
                            <div class="list-group w-100 px-4">
                                <button class="list-group-item list-group-item-action rename-btn text-start"
                                    data-wishlist-id="<%= wishlist._id %>" data-wishlist-name="<%= wishlist.name %>">
                                    Rename
                                </button>
                                <hr class="my-0">
                                <button class="list-group-item list-group-item-action text-danger delete-btn text-start"
                                    data-wishlist-id="<%= wishlist._id %>">
                                    Delete
                                </button>
                            </div>
                        </div>

                        <% if (wishlist.listings.length===0) { %>
                            <p class="text-muted">No listings in this wishlist.</p>
                            <% } else { %>
                                <div class="d-flex overflow-auto gap-4 pb-2">
                                    <% wishlist.listings.forEach(listing=> { %>
                                        <div class="position-relative">
                                            <button class="wishlist-btn btn position-absolute top-0 end-0 m-2"
                                                data-listing-id="<%= listing._id %>">
                                                <i
                                                    class="fa-heart <%= listing.isWishlisted ? 'fa-solid active' : 'fa-regular' %>"></i>
                                            </button>

                                            <a href="/listings/<%= listing._id %>"
                                                class="text-decoration-none text-dark">
                                                <div class="card border-0 shadow-sm rounded" style="min-width: 300px;">
                                                    <img src="<%= listing.image.url %>" class="card-img-top rounded-top"
                                                        style="height: 200px; object-fit: cover;"
                                                        alt="<%= listing.title %>">
                                                    <div class="card-body px-3 pb-3">
                                                        <p class="fw-medium mb-1">
                                                            <%= listing.title %>
                                                        </p>
                                                        <small class="text-muted">
                                                            â‚¹<%= listing?.price?.toLocaleString("en-IN") || 'N/A' %>
                                                                /night
                                                        </small>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        <% }) %>
                                </div>
                                <% } %>
                    </div>
                    <% }) %>
                        <% } %>
    </div>

    <style>
        .settings-panel {
            background-color: #fff;
            z-index: 20;
            padding-top: 2rem;
            border-radius: 1rem;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
        }

        .settings-panel .list-group-item {
            border: none;
            font-size: 0.95rem;
            padding: 0.75rem 1.25rem;
        }

        .settings-panel .close-panel {
            background: transparent;
            border: none;
            font-weight: bold;
        }

        .wishlist-btn {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            z-index: 2;
        }

        .wishlist-btn i.fa-heart {
            font-size: 1.5rem;
            color: transparent;
            -webkit-text-stroke: 1.5px white;
            transition: transform 0.2s ease, color 0.2s ease;
        }

        .wishlist-btn i.fa-heart.active {
            color: #fe424d;
            -webkit-text-stroke: 1.5px white;
        }

        .wishlist-btn i.fa-heart:hover {
            transform: scale(1.2);
        }

        .card:hover {
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s ease;
        }

        .fade-out {
            opacity: 0;
            transition: opacity 0.3s ease-out;
        }

        .modal-content {
            border-radius: 1rem;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            border: none;
        }

        .input-group input.form-control {
            border-radius: 2rem;
            padding: 0.6rem 1rem;
        }

        .input-group .btn {
            border-radius: 50%;
            background: transparent;
            border: none;
            font-size: 1rem;
        }

        .modal-footer .btn {
            min-width: 100px;
        }

        .modal-footer {
            border-top: none;
        }

        .modal-header {
            border-bottom: none;
        }

        .modal .btn-dark:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .modal .btn-dark,
        .modal .btn-light {
            border-radius: 0.75rem;
        }

        /* --- Airbnb-style three-dot menu button --- */
        .wishlist-dropdown-btn {
            background-color: #f7f7f7;
            border: 1px solid #ddd;
            border-radius: 50%;
            padding: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
            transition: background-color 0.2s ease;
        }

        .wishlist-dropdown-btn:hover {
            background-color: #e6e6e6;
        }

        .wishlist-dropdown-btn i {
            font-size: 1.2rem;
            color: #222;
        }

        /* --- Dropdown menu style --- */
        .dropdown-menu {
            border-radius: 0.75rem;
            padding: 0.5rem 0;
            font-family: "Segoe UI", sans-serif;
            font-size: 0.95rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .dropdown-item {
            padding: 0.6rem 1.25rem;
            font-weight: 500;
            color: #333;
            transition: background-color 0.2s ease;
        }

        .dropdown-item i {
            width: 18px;
        }

        .dropdown-item:hover {
            background-color: #f5f5f5;
            color: #000;
        }

        .dropdown-item.text-danger:hover {
            background-color: #ffeaea;
            color: #d80000;
        }
    </style>


    <script>
        document.addEventListener("DOMContentLoaded", () => {
            let currentWishlistId = null;

            // Handle heart icon click
            document.querySelectorAll(".wishlist-btn").forEach(btn => {
                btn.addEventListener("click", async (e) => {
                    e.preventDefault();

                    const icon = btn.querySelector("i.fa-heart");
                    const listingId = btn.dataset.listingId;
                    const isWishlisted = icon.classList.contains("active");

                    if (isWishlisted) {
                        try {
                            const res = await fetch(`/wishlist/remove/${listingId}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            });

                            if (res.ok) {
                                icon.classList.remove("fa-solid", "active");
                                icon.classList.add("fa-regular");

                                const wrapper = btn.closest(".position-relative");
                                if (wrapper) {
                                    wrapper.classList.add("fade-out");
                                    setTimeout(() => wrapper.remove(), 300);
                                }
                            } else {
                                alert("Failed to remove from wishlist.");
                            }
                        } catch (err) {
                            console.error(err);
                            alert("Error removing from wishlist.");
                        }
                    } else {
                        const modal = new bootstrap.Modal(document.getElementById('wishlistModal'));
                        document.getElementById('wishlistModal').setAttribute('data-listing-id', listingId);
                        modal.show();
                    }
                });
            });

            // Handle Rename Button Click
            document.querySelectorAll(".rename-btn").forEach(btn => {
                btn.addEventListener("click", () => {
                    currentWishlistId = btn.dataset.wishlistId;
                    const name = btn.dataset.wishlistName;

                    const input = document.getElementById("renameInput");
                    input.value = name;
                    document.getElementById("renameCharCount").textContent = name.length;
                    document.getElementById("renameConfirmBtn").disabled = name.trim() === "";

                    const renameModal = new bootstrap.Modal(document.getElementById("renameModal"));
                    renameModal.show();
                });
            });

            document.getElementById("renameInput").addEventListener("input", e => {
                const val = e.target.value;
                document.getElementById("renameCharCount").textContent = val.length;
                document.getElementById("renameConfirmBtn").disabled = val.trim() === "";
            });

            // Handle Rename Confirm
            document.getElementById("renameConfirmBtn").addEventListener("click", async () => {
                const newName = document.getElementById("renameInput").value.trim();
                if (!newName) return;

                try {
                    const res = await fetch(`/wishlist/rename/${currentWishlistId}`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ name: newName })
                    });

                    if (res.ok) {
                        const updatedTitle = document.querySelector(`[data-wishlist-id="${currentWishlistId}"]`)
                            ?.closest(".d-flex")?.querySelector("h4");
                        if (updatedTitle) updatedTitle.textContent = newName;

                        const renameBtn = document.querySelector(`.rename-btn[data-wishlist-id="${currentWishlistId}"]`);
                        if (renameBtn) renameBtn.setAttribute("data-wishlist-name", newName);

                        const modalInstance = bootstrap.Modal.getInstance(document.getElementById("renameModal"));
                        modalInstance.hide();
                    } else {
                        alert("Failed to rename wishlist");
                    }
                } catch (err) {
                    console.error("Rename error:", err);
                }
            });

            // Handle Delete Button Click
            document.querySelectorAll(".delete-btn").forEach(btn => {
                btn.addEventListener("click", () => {
                    currentWishlistId = btn.dataset.wishlistId;
                    const name = btn.closest(".mb-5").querySelector("h4").innerText;

                    document.getElementById("deleteWishlistName").textContent = name;
                    const deleteModal = new bootstrap.Modal(document.getElementById("deleteModal"));
                    deleteModal.show();
                });
            });

            // âœ… Fix: Use POST instead of DELETE to match your controller
            document.getElementById("deleteConfirmBtn").addEventListener("click", async () => {
                try {
                    const res = await fetch(`/wishlist/delete/${currentWishlistId}`, {
                        method: "POST"
                    });

                    if (res.ok) {
                        const wishlistDiv = document.querySelector(`[data-wishlist-id="${currentWishlistId}"]`)?.closest(".mb-5");
                        if (wishlistDiv) {
                            wishlistDiv.classList.add("fade-out");
                            setTimeout(() => wishlistDiv.remove(), 300);
                        }

                        const modalInstance = bootstrap.Modal.getInstance(document.getElementById("deleteModal"));
                        modalInstance.hide();
                    } else {
                        alert("Failed to delete wishlist");
                    }
                } catch (err) {
                    console.error("Delete error:", err);
                }
            });

            // ðŸ”¥ NEW: Show settings panel when 3-dot is clicked
            document.querySelectorAll(".wishlist-dropdown-btn").forEach(btn => {
                btn.addEventListener("click", (e) => {
                    e.stopPropagation();

                    // Hide all other panels first
                    document.querySelectorAll(".settings-panel").forEach(panel => {
                        panel.classList.add("d-none");
                    });

                    const card = btn.closest(".mb-5");
                    const panel = card.querySelector(".settings-panel");
                    if (panel) {
                        panel.classList.remove("d-none");
                    }
                });
            });

            // ðŸ”¥ NEW: Hide settings panel when close (X) clicked
            document.querySelectorAll(".close-panel").forEach(closeBtn => {
                closeBtn.addEventListener("click", () => {
                    const panel = closeBtn.closest(".settings-panel");
                    if (panel) {
                        panel.classList.add("d-none");
                    }
                });
            });
        });
    </script>